version: '3.9'

services:
  backend:
    build: ./backend
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - FRONTEND_STAFF_URL=${FRONTEND_STAFF_URL}
      - FRONTEND_CLIENT_URL=${FRONTEND_CLIENT_URL}
    depends_on:
      - db

  staff-frontend:
    build: ./staff-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL='http://backend:8001/'
      - REACT_APP_AUTH0_DOMAIN=${REACT_APP_AUTH0_DOMAIN}
      - REACT_APP_AUTH0_CLIENT_ID=${REACT_APP_AUTH0_CLIENT_ID}
    depends_on:
      - backend
  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/seed-test-data.sql:/db/seed-test-data.sql
      - ./db/init.sql:/db/init.sql
      - ./db/init.sh:/docker-entrypoint-initdb.d/zzz-init.sh
    environment:
      - SEED_TEST_DATA=${SEED_TEST_DATA:-false}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

volumes:
  postgres_data: